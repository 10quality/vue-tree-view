Vue.component("treeview",Vue.extend({template:'<div class="treeview {{class}}"><div class="node-data" v-for="(index, node) in model"><div class="node" :class="{\'active\': isSelected(index)}" @click.prevent="select(index, node[valuename])"><span class="icon node-parent-toggled" v-show="areValidNodes(node[children]) && isOpened(index)"><svg viewBox="0 0 35 35"><g transform="translate(0,-1017.3621)"><path class="back" d="m 2.1411424,1026.4693 0,23.4146 27.0189286,0 0,-23.4146 -13.937805,0 0,-2.7898 -9.2657958,0 0,2.7898 z"/><path class="front" d="m 1,1051.3621 7,-19 2,0 1,-2 6,0 -1,2 19,0 -4.472399,18.9369 z"/><path class="light" d="m 29.696699,1047.0363 -0.820749,3.0631 -6,0 0.757614,-3"/></g></svg> </span><span class="icon node-parent" v-show="areValidNodes(node[children]) && !isOpened(index)"><svg width="14" height="14" viewBox="0 0 35 35"><g transform="translate(0,-1017.3621)"><path class="fill" d="m 1,1026.1835 0,25.1786 33,0 0,-25.1786 -18.857143,0 0,-3 -10.017857,0 0,3 z"/><path class="light" d="m 32,1046.1625 0,3 -6,0 0,-3 6,0"/></g></svg> </span><span class="icon node" v-if="!areValidNodes(node[children])"><svg width="8" height="8" viewBox="0 0 35 35"><g transform="translate(0,-1017.3622)"><circle cx="17.488264" cy="1034.874" r="16.003242"/></g></svg></span><label>{{{node[labelname]}}}</label></div><div v-if="areValidNodes(node[children])" class="children" v-show="isOpened(index)"><div class="margin"></div><div class="nodes"><treeview :id="id" :value.sync="value" :labelname="labelname" :valuename="valuename" :children="children" :model="node[children]" :parent.once="index" class="inner"></treeview></div></div></div></div>',props:{id:{Type:String,"default":"tv_"+Math.ceil(1e5*Math.random())},value:[String,Number],model:{Type:Array,"default":function(){return[]}},"class":{Type:String,"default":""},children:{Type:String,"default":"nodes"},labelname:{Type:String,"default":"label"},valuename:{Type:String,"default":"value"},parent:{Type:Number,"default":void 0}},methods:{select:function(a,b){this.toggleOpen(a),this.$set("value",b),this.$dispatch("treeview_click",{label:this.model[a][this.labelname],value:this.model[a][this.valuename]})},toggleOpen:function(a){this.areValidNodes(this.model[a][this.children])&&(void 0==this.model[a].isOpened&&this.$set("model["+a+"].isOpened",this.hasSelectedChild(a)),this.$set("model["+a+"].isOpened",!this.model[a].isOpened))},areValidNodes:function(a){return void 0!=a&&"[object Array]"===Object.prototype.toString.call(a)&&a.length>0},hasSelected:function(){for(var a in this.model)if(this.isSelected(a)||this.hasSelectedChild(a))return!0;return!1},hasSelectedChild:function(a){for(var b in this.$children)if(this.$children[b].parent==a&&this.$children[b].hasSelected())return!0;return!1},isSelected:function(a){return this.value&&this.model[a][this.valuename]==this.value},isOpened:function(a){return void 0!=this.model[a].isOpened&&this.model[a].isOpened||this.hasSelectedChild(a)}}}));